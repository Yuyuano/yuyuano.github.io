<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>遇缘的博客</title><link>http://blog.yuzhiyuan.top</link><description>以此记录我的编程生涯</description><copyright>遇缘的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/170221043?v=4</url><title>avatar</title><link>http://blog.yuzhiyuan.top</link></image><lastBuildDate>Fri, 24 Oct 2025 08:49:17 +0000</lastBuildDate><managingEditor>遇缘的博客</managingEditor><ttl>60</ttl><webMaster>遇缘的博客</webMaster><item><title>猜数字</title><link>http://blog.yuzhiyuan.top/post/cai-shu-zi.html</link><description># 用 while 循环写个命令行猜数字游戏
猜数字代码依靠while循环来实现
```python
import random #加入random随机数
number = random.randint(1,100) #让number在1-100里面随机一个数
cishu = 10 #计数器，计算剩余猜测次数
number_user = int(input('猜一个1-100的数字：'))
while True:
    if number == number_user:
        print('答对了')
        break
    if cishu == 1: #如果次数用完，失败并且break
        print('次数用完了，失败了，正确答案为',number)
        break
    else:        #判断数字大小
        cishu -= 1
        if number_user &gt; number:
            print(f'大了，你还有{cishu}次机会')
            number_user = int(input())
        else:
            print(f'小了，你还有{cishu}次机会')
            number_user = int(input())
```
&gt;[!CAUTION]
循环里最后一次判断之前已经减 1，所以要把 `cishu == 1` 作为最后一次机会，否则实际会多给一次
&gt;
如果你想要 `if cishu == 0` 就刚好用完**break**的话要么把 `cishu = 10 `改为9或者将`cishu -= 1`放在**else**外面，放在**while**里面。</description><guid isPermaLink="true">http://blog.yuzhiyuan.top/post/cai-shu-zi.html</guid><pubDate>Fri, 24 Oct 2025 08:48:43 +0000</pubDate></item><item><title>计算1-100数字（While循环写法）</title><link>http://blog.yuzhiyuan.top/post/ji-suan-1-100-shu-zi-%EF%BC%88While-xun-huan-xie-fa-%EF%BC%89.html</link><description># 此篇为While循环写法
### 总和
```python
number = 1
total = 0 #计数器
while number &lt;= 100: #循环执行条件：直到number小于等于100时
    total += number #使每一次循环的number值加到一起
    number += 1
print(total)
```
&gt;[!CAUTION]
必须额外加一个计数器，不然使用number += number的话会使数字逐个翻倍
### 奇数和
```python
number = 1
total_odd = 0  # 奇数和计数器
while number &lt;= 99:
    total_odd += number
    number += 2  # 每次加2，只取奇数
print('奇数和：', total_odd)
```
### 偶数和
``` python
number = 2
total_even = 0  # 偶数和计数器
while number &lt;= 100:
    total_even += number
    number += 2  # 每次加2，只取偶数
print('偶数和：', total_even)
```
&gt;[!NOTE]
其实和**For循环**两者之间并没有什么太大的差别，计算步骤完全一样，只是**While循环**需要判断循环条件，而**For循环**只需要历遍给出来的值就行了
&gt;。</description><guid isPermaLink="true">http://blog.yuzhiyuan.top/post/ji-suan-1-100-shu-zi-%EF%BC%88While-xun-huan-xie-fa-%EF%BC%89.html</guid><pubDate>Thu, 23 Oct 2025 10:25:44 +0000</pubDate></item><item><title>计算1-100数字</title><link>http://blog.yuzhiyuan.top/post/ji-suan-1-100-shu-zi.html</link><description># 计算1-100数字的和，奇数和，偶数和
### 这是计算1-100和的Python代码，使用**For循环**写
```python
total = 0 #创建计数器
for i in range(1, 101):#For循环，历遍1-100
    total += i #进行加运算
print('1-100 总和:', total)#输出结果
```
&gt; [!CAUTION]
为什么**For循环**要写 **(1,101)** 而不是 **(1,100)** 呢，是因为For循环是不包含历遍对象末尾本身的(也就是不包含100）所以末尾要写101
&gt;
### 以下是奇数和的
```python
# 1-100 奇数和
odd_sum = 0
for i in range(1, 101, 2):   # 从 1 开始，步长 2
    odd_sum += i
print('1-100 奇数和:', odd_sum)
```
&gt;[!TIP]
**Range**历遍后面可以跟每一步走多少，这样可以用来计算奇偶数
### 偶数和
```python
# 1-100 偶数和
even_sum = 0
for i in range(2, 101, 2):   # 从 2 开始，步长 2
    even_sum += i
print('1-100 偶数和:', even_sum)
```
&gt;[!TIP]
里面的计数器变量名（如total，odd_sum,even_sum）都可以自定义，自己想填啥填啥，但最好让自己看得懂
从1开始每一步走两格可以使得每一步都是奇数，从2开始每一步走两格每一步都是偶数
&gt;。</description><guid isPermaLink="true">http://blog.yuzhiyuan.top/post/ji-suan-1-100-shu-zi.html</guid><pubDate>Thu, 23 Oct 2025 09:50:47 +0000</pubDate></item><item><title>水仙花</title><link>http://blog.yuzhiyuan.top/post/shui-xian-hua.html</link><description># 水仙花数计算代码
## 水仙花数是指一个三位数，其中每一位的三次方的和为它本身（abc=a**3+b**3+c**3)
### 以下使用def函数的写法

```Python
def shuixianhua(a):
    a1 = a // 100
    a2 = a // 10 % 10
    a3 = a % 10
    return (a1**3 + a2**3 + a3**3) == a  # 返回判断结果（布尔值）
number = int(input())  # 例如输入153
if shuixianhua(number):
    print(number)
else:
    print('no')
```
### 以下是直接写的
```Python
_number_=int(input())
a=_number_//100
b=_number_//10%10
c=_number_%10
if a**3+b**3+c**3==_number_:
    print('YES')
else:
    print('NO')
```
### 二者区别
第一个为迂回判断式，将计算步骤用函数表达，可以重复使用。</description><guid isPermaLink="true">http://blog.yuzhiyuan.top/post/shui-xian-hua.html</guid><pubDate>Wed, 22 Oct 2025 10:01:22 +0000</pubDate></item><item><title>博客测试</title><link>http://blog.yuzhiyuan.top/post/bo-ke-ce-shi.html</link><description>test。</description><guid isPermaLink="true">http://blog.yuzhiyuan.top/post/bo-ke-ce-shi.html</guid><pubDate>Tue, 21 Oct 2025 11:29:56 +0000</pubDate></item></channel></rss>